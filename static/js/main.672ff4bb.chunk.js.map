{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","currentDate","setState","console","log","toLocaleTimeString","clearInterval","clockName","props","timeString","className","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","document","addEventListener","event","preventDefault","_prevProps","prevState","oldName","newName","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,EAAc,IAAIL,KAExB,EAAKM,SAAS,CAAEP,KAAMM,IAGtBE,QAAQC,IAAIH,EAAYI,wBACvB,OAfP,kCAkBE,WACEN,OAAOO,cAAcR,KAAKD,WAnB9B,oBAsBE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAY,EAAcT,KAAKU,MAAnBD,UACFE,EAAad,EAAKU,qBAExB,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGD,WApCX,GAA2BE,IAAMC,WCLjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEzB,MAAQ,CACN0B,UAAU,EACVb,UAAWM,KAHf,uDAME,WAAqB,IAAD,OAClBd,OAAOC,aAAY,WACjB,EAAKE,SAAS,CAAEK,UAAWM,QAC1B,MAEHQ,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKtB,SAAS,CAAEkB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKpB,SAAS,CAAEkB,UAAU,SAlBhC,gCAsBE,SAAmBK,EAA0BC,GAC3C,IAAMC,EAAUD,EAAUnB,UACpBqB,EAAU9B,KAAKJ,MAAMa,UAEvBoB,IAAYC,GAEdzB,QAAQC,IAAR,uBAA4BuB,EAA5B,eAA0CC,MA5BhD,oBAgCE,WACE,MAAgC9B,KAAKJ,MAA7B0B,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,UAElB,OACE,sBAAKG,UAAU,MAAf,UACE,6CACCU,GAAY,cAAC,EAAD,CAAOb,UAAWA,WAtCvC,GAAyBI,IAAMC,WCb/BiB,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.672ff4bb.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const currentDate = new Date();\n\n      this.setState({ date: currentDate });\n\n      // eslint-disable-next-line no-console\n      console.log(currentDate.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { clockName } = this.props;\n    const timeString = date.toLocaleTimeString();\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {timeString}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  componentDidMount() {\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentDidUpdate(_prevProps: Readonly<{}>, prevState: Readonly<State>) {\n    const oldName = prevState.clockName;\n    const newName = this.state.clockName;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line\n      console.log(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}